@model IEnumerable<TaskManager.Models.TaskItem>

@{
    ViewData["Title"] = "Task List";
}

<h1>My Tasks</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New Task</a>
</p>

<div class="row">
    @foreach (var item in Model) {
        <div class="col-md-4 mb-4">
            <div class="card @(item.IsCompleted ? "bg-light" : "")">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <span class="@(item.IsCompleted ? "text-muted" : "")">
                        @Html.DisplayFor(modelItem => item.Title)
                    </span>
                    @if (item.Priority == TaskManager.Models.TaskPriority.High || item.Priority == TaskManager.Models.TaskPriority.Urgent)
                    {
                        <span class="badge @(item.Priority == TaskManager.Models.TaskPriority.Urgent ? "bg-danger" : "bg-warning")">
                            @Html.DisplayFor(modelItem => item.Priority)
                        </span>
                    }
                </div>
                <div class="card-body">
                    <p class="card-text @(item.IsCompleted ? "text-muted" : "")">
                        @Html.DisplayFor(modelItem => item.Description)
                    </p>
                    @if (item.DueDate.HasValue)
                    {
                        <p class="card-text">
                            <small class="@(item.DueDate < DateTime.Today ? "text-danger" : "text-muted")">
                                Due: @item.DueDate.Value.ToString("MMM dd, yyyy")
                            </small>
                        </p>
                    }
                </div>
                <div class="card-footer d-flex justify-content-between align-items-center">
                    <div>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                    </div>
                    <form asp-action="ToggleComplete" asp-route-id="@item.Id" method="post">
                        <button type="submit" class="btn btn-sm @(item.IsCompleted ? "btn-outline-secondary" : "btn-outline-success")">
                            @(item.IsCompleted ? "Mark Incomplete" : "Mark Complete")
                        </button>
                    </form>
                </div>
            </div>
        </div>
    }
</div>